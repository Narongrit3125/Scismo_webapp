// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "../"
  outputName = "database.dbml"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Prisma Accelerate extension for connection pooling
  relationMode = "prisma"
}

// User management - ระบบจัดการผู้ใช้งาน
model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  password    String
  firstName   String
  lastName    String
  role        Role     @default(USER)
  isActive    Boolean  @default(true)
  lastLoginAt DateTime?
  resetToken  String?
  resetTokenExpiry DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  memberProfile Member?
  staffProfile  Staff?
  authoredNews  News[]
  authoredActivities Activity[]
  authoredProjects Project[]
  contactMessages Contact[]

  @@map("users")
}

enum Role {
  ADMIN   // ผู้ดูแลระบบ
  MEMBER  // สมาชิกสโมสร
  USER    // ผู้ใช้งานทั่วไป
}

// Member information - ข้อมูลสมาชิกสโมสร
model Member {
  id          String    @id @default(cuid())
  userId      String    @unique
  studentId   String    @unique // รหัสนิสิต
  phone       String?
  year        Int       // ปีการศึกษา
  department  String    // สาขาวิชา
  faculty     String    // คณะ
  position    String?   // ตำแหน่งในสโมสร
  division    String?   // ฝ่ายงาน
  joinDate    DateTime  @default(now())
  isActive    Boolean   @default(true)
  avatar      String?

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("members")
}

// Staff information - ข้อมูลบุคลากร/เจ้าหน้าที่
model Staff {
  id          String   @id @default(cuid())
  userId      String   @unique
  staffId     String   @unique // รหัสเจ้าหน้าที่
  department  String   // แผนก/ฝ่าย
  position    String   // ตำแหน่ง
  phone       String?
  avatar      String?
  isActive    Boolean  @default(true)
  startDate   DateTime @default(now()) // วันที่เริ่มงาน

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("staff")
}

// Position/Role definitions - ตำแหน่งและบทบาทในองค์กร
model Position {
  id          String       @id @default(cuid())
  title       String       @unique // ชื่อตำแหน่ง
  description String?      // รายละเอียด
  type        PositionType // ประเภทตำแหน่ง
  level       Int          @default(0) // ระดับตำแหน่ง
  division    String?      // ฝ่าย/แผนก
  responsibilities String?  // หน้าที่ความรับผิดชอบ
  isActive    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("positions")
}

enum PositionType {
  EXECUTIVE   // ฝ่ายบริหาร
  COMMITTEE   // คณะกรรมการ
  ADVISOR     // ที่ปรึกษา
  COORDINATOR // ผู้ประสานงาน
  MEMBER      // สมาชิกทั่วไป
}

// Category - หมวดหมู่สำหรับเนื้อหาต่างๆ
model Category {
  id          String       @id @default(cuid())
  name        String       // ชื่อหมวดหมู่
  slug        String       @unique // URL-friendly name
  type        CategoryType // ประเภทหมวดหมู่
  description String?      // คำอธิบาย
  color       String?      // สีประจำหมวดหมู่ (hex code)
  icon        String?      // ไอคอน
  order       Int          @default(0) // ลำดับการแสดงผล
  isActive    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // Relations
  news        News[]
  activities  Activity[]
  documents   Document[]
  galleries   Gallery[]

  @@unique([type, slug])
  @@index([type])
  @@index([isActive])
  @@map("categories")
}

enum CategoryType {
  NEWS      // ข่าวสาร
  ACTIVITY  // กิจกรรม
  DOCUMENT  // เอกสาร
  GALLERY   // แกลเลอรี
  GENERAL   // ทั่วไป
}

// Tag - แท็กสำหรับเนื้อหา
model Tag {
  id         String   @id @default(cuid())
  name       String   @unique // ชื่อแท็ก
  slug       String   @unique // URL-friendly name
  color      String?  // สีประจำแท็ก (hex code)
  usageCount Int      @default(0) // จำนวนการใช้งาน
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  news       NewsTag[]
  activities ActivityTag[]
  documents  DocumentTag[]

  @@index([usageCount])
  @@map("tags")
}

// News and announcements - ข่าวสารและประกาศ
model News {
  id          String        @id @default(cuid())
  title       String        // หัวข้อข่าว
  content     String        // เนื้อหา
  excerpt     String?       // สรุปข่าว
  authorId    String        // ผู้เขียน
  categoryId  String        @default("default") // หมวดหมู่
  priority    Priority      @default(MEDIUM) // ระดับความสำคัญ
  isPinned    Boolean       @default(false)  // ปักหมุดข่าว
  status      NewsStatus    @default(DRAFT)  // สถานะ
  publishedAt DateTime?     // วันที่เผยแพร่
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  slug        String        @unique
  viewCount   Int           @default(0) // จำนวนการเข้าชม
  image       String?       // รูปภาพปก
  attachments String?       // ไฟล์แนบ (JSON array)

  author      User          @relation(fields: [authorId], references: [id])
  category    Category?     @relation(fields: [categoryId], references: [id])
  tags        NewsTag[]

  @@index([categoryId])
  @@index([status])
  @@index([publishedAt])
  @@map("news")
}

enum Priority {
  LOW     // ต่ำ
  MEDIUM  // ปานกลาง
  HIGH    // สูง
  URGENT  // ด่วน
}

enum NewsStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

// NewsTag - Many-to-many relationship between News and Tag
model NewsTag {
  newsId    String
  tagId     String
  createdAt DateTime @default(now())

  news      News     @relation(fields: [newsId], references: [id], onDelete: Cascade)
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([newsId, tagId])
  @@index([newsId])
  @@index([tagId])
  @@map("news_tags")
}

// Activities and events - กิจกรรมและงานต่างๆ
model Activity {
  id                  String         @id @default(cuid())
  title               String         // ชื่อกิจกรรม
  description         String         // รายละเอียด
  authorId            String         // ผู้รับผิดชอบ
  projectId           String?        // เชื่อมโยงกับโครงการหลัก
  categoryId          String         @default("default") // หมวดหมู่
  type                ActivityType   // ประเภทกิจกรรม
  startDate           DateTime       // วันเริ่มต้น
  endDate             DateTime?      // วันสิ้นสุด
  location            String?        // สถานที่จัดกิจกรรม
  status              ActivityStatus @default(PLANNING) // สถานะ
  isPublic            Boolean        @default(true)
  image               String?        // รูปภาพ
  gallery             String?        // แกลเลอรีภาพกิจกรรม (JSON array)
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt

  author              User           @relation(fields: [authorId], references: [id])
  project             Project?       @relation(fields: [projectId], references: [id])
  category            Category?      @relation(fields: [categoryId], references: [id])
  tags                ActivityTag[]

  @@index([categoryId])
  @@index([status])
  @@index([startDate])
  @@map("activities")
}

enum ActivityType {
  WORKSHOP      // เวิร์กช็อป/อบรม
  SEMINAR       // สัมมนา/บรรยาย
  COMPETITION   // การแข่งขัน
  VOLUNTEER     // อาสาสมัคร/บำเพ็ญประโยชน์
  SOCIAL        // กิจกรรมสังสรรค์
  TRAINING      // ฝึกอบรม
  MEETING       // ประชุม
  CEREMONY      // พิธีการ
  FUNDRAISING   // ระดมทุน
  EXHIBITION    // นิทรรศการ/จัดแสดง
  ACADEMIC      // กิจกรรมวิชาการ
  SPORT         // กีฬา
  ART_CULTURE   // ศิลปวัฒนธรรม
}

enum ActivityStatus {
  PLANNING            // วางแผน
  OPEN_REGISTRATION   // เปิดรับสมัคร
  FULL                // เต็ม
  IN_PROGRESS         // กำลังดำเนินการ
  COMPLETED           // เสร็จสิ้น
  CANCELLED           // ยกเลิก
  POSTPONED           // เลื่อน
}

// ActivityTag - Many-to-many relationship between Activity and Tag
model ActivityTag {
  activityId String
  tagId      String
  createdAt  DateTime @default(now())

  activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([activityId, tagId])
  @@index([activityId])
  @@index([tagId])
  @@map("activity_tags")
}

// Projects (โครงการหลัก)
model Project {
  id                String        @id @default(cuid())
  code              String        @unique // รหัสโครงการ เช่น "SC2567-001"
  title             String        // ชื่อโครงการ
  description       String        // รายละเอียด
  authorId          String        // ผู้รับผิดชอบหลัก
  academicYear      Int           // ปีการศึกษา เช่น 2567
  semester          Int?          // ภาคการศึกษา (1, 2, หรือ summer)
  status            ProjectStatus @default(PLANNING)
  startDate         DateTime      // วันเริ่มโครงการ
  endDate           DateTime      // วันสิ้นสุดโครงการ
  budget            Float?        // งบประมาณ
  isActive          Boolean       @default(true)
  image             String?       // รูปปกโครงการ
  planFile          String?       // ไฟล์แผนโครงการ
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  author            User          @relation(fields: [authorId], references: [id])
  activities        Activity[]    // กิจกรรมในโครงการ

  @@index([academicYear])
  @@index([status])
  @@map("projects")
}

enum ProjectStatus {
  PLANNING      // วางแผน
  PENDING_APPROVAL // รออนุมัติ
  APPROVED      // อนุมัติแล้ว
  IN_PROGRESS   // กำลังดำเนินการ
  COMPLETED     // เสร็จสิ้น
  ON_HOLD       // ระงับชั่วคราว
  CANCELLED     // ยกเลิก
  CLOSED        // ปิดโครงการ
}

// Documents and files - เอกสารและไฟล์
model Document {
  id            String      @id @default(cuid())
  title         String      // ชื่อเอกสาร
  description   String?     // คำอธิบาย
  categoryId    String      @default("default") // หมวดหมู่
  type          String      // ประเภทไฟล์ (PDF, DOC, XLS, etc.)
  fileName      String      // ชื่อไฟล์
  fileUrl       String      // URL ไฟล์
  fileSize      Int         // ขนาดไฟล์ (bytes)
  version       String?     // เวอร์ชัน
  isPublic      Boolean     @default(true) // สิทธิ์การเข้าถึง
  accessLevel   AccessLevel @default(PUBLIC) // ระดับการเข้าถึง
  downloadCount Int         @default(0) // จำนวนดาวน์โหลด
  uploadedBy    String      // ผู้อัปโหลด
  approvedBy    String?     // ผู้อนุมัติ
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  expiryDate    DateTime?   // วันหมดอายุ (ถ้ามี)

  category      Category?      @relation(fields: [categoryId], references: [id])
  tags          DocumentTag[]

  @@index([categoryId])
  @@index([isPublic])
  @@map("documents")
}

enum AccessLevel {
  PUBLIC      // ทุกคนเข้าถึงได้
  MEMBER_ONLY // สมาชิกเท่านั้น
  ADMIN_ONLY  // ผู้ดูแลระบบเท่านั้น
  RESTRICTED  // จำกัดเฉพาะบุคคล
}

// DocumentTag - Many-to-many relationship between Document and Tag
model DocumentTag {
  documentId String
  tagId      String
  createdAt  DateTime @default(now())

  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([documentId, tagId])
  @@index([documentId])
  @@index([tagId])
  @@map("document_tags")
}

// Gallery - แกลเลอรีภาพกิจกรรม
model Gallery {
  id          String    @id @default(cuid())
  title       String    // ชื่ออัลบั้ม/หัวข้อ
  description String?   // คำอธิบาย
  categoryId  String    @default("default") // หมวดหมู่
  albumType   AlbumType @default(ACTIVITY) // ประเภทอัลบั้ม
  images      String    // รูปภาพ (JSON array)
  coverImage  String?   // รูปปกอัลบั้ม
  eventDate   DateTime  // วันที่จัดกิจกรรม
  uploadedBy  String    // ผู้อัปโหลด
  viewCount   Int       @default(0) // จำนวนการเข้าชม
  isPublic    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  category    Category?  @relation(fields: [categoryId], references: [id])

  @@index([categoryId])
  @@index([eventDate])
  @@map("gallery")
}

enum AlbumType {
  ACTIVITY    // กิจกรรม
  EVENT       // งาน/อีเวนต์
  CEREMONY    // พิธีการ
  ACHIEVEMENT // ผลงาน
  FACILITY    // สถานที่/อุปกรณ์
  OTHER       // อื่นๆ
}

// Contact messages - ข้อความติดต่อ
model Contact {
  id        String        @id @default(cuid())
  name      String        // ชื่อผู้ติดต่อ
  email     String        // อีเมล
  phone     String?       // เบอร์โทร
  subject   String        // หัวข้อ
  message   String        // ข้อความ
  category  String        @default("general") // หมวดหมู่
  priority  Priority      @default(MEDIUM)    // ระดับความสำคัญ
  status    ContactStatus @default(PENDING)   // สถานะ
  userId    String?       // ผู้ส่ง (ถ้าล็อกอิน)
  assignedTo String?      // มอบหมายให้
  repliedBy String?       // ผู้ตอบกลับ
  repliedAt DateTime?     // วันที่ตอบกลับ
  reply     String?       // ข้อความตอบกลับ
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  user      User?         @relation(fields: [userId], references: [id])

  @@index([status])
  @@index([category])
  @@map("contacts")
}

enum ContactStatus {
  PENDING     // รอดำเนินการ
  IN_PROGRESS // กำลังดำเนินการ
  REPLIED     // ตอบกลับแล้ว
  CLOSED      // ปิดเรื่อง
}
